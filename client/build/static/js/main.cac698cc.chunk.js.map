{"version":3,"sources":["components/Room/Room.js","components/AddRoom/AddRoom.js","components/Main/Main.js","components/Login/Login.js","components/ChatMessages/ChatMessages.js","components/Chat/Chat.js","index.js"],"names":["Room","props","_props$room","room","_id","name","user","color","react_default","a","createElement","react_router_dom","to","pathname","concat","state","className","style","backgroundColor","_","isEqual","loggedUser","onClick","deleteRoom","index_esm","AddRoom","openInput","cancelAddingRoom","roomName","addRoom","addRoomKeyPress","changeRoomName","addingRoom","addBtn","addInput","placeholder","onChange","onKeyPress","value","type","autoFocus","result","react","host","window","location","hostname","protocol","baseUrl","Main","rooms","getUser","jwt","axios","get","headers","Authorization","then","res","data","expired","_this","history","push","setState","catch","err","getRooms","randomColor","Math","random","messages","post","Object","toConsumableArray","event","key","onChangeRoomName","e","target","id","preventDefault","delete","console","log","filter","localStorage","getItem","this","_this2","map","i","components_Room_Room","username","components_AddRoom_AddRoom","Component","Login","loginUser","token","setItem","loginUserKeyPress","onChangeLoggedUser","ChatMessages","typingInfo","typing","chatMessages","msg","date","message","length","socket","io","connect","vh","innerHeight","document","documentElement","setProperty","Chat","users","getUsersInRoom","on","getUsersLeavingRoom","userIsTyping","slice","x","indexOf","userNotTyping","typingUser","socketSendMessage","emit","list","getElementById","scrollTop","scrollHeight","joining","getMessages","match","params","handleSendMessage","sending","Date","toLocaleString","handleClickSendMessage","onChangeMessageInput","leaving","_this$state$room","components_ChatMessages_ChatMessages","isMobile","routes","react_router","path","exact","component","render","ReactDOM"],"mappings":"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","file":"static/js/main.cac698cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport './Room.css';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\n\r\nconst Room = props => {\r\n  const { _id, name, user, color } = props.room;\r\n\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/chat/${_id}`,\r\n        state: {\r\n          room: props.room\r\n        }\r\n      }}\r\n    >\r\n      <div className='room'>\r\n        <div className='avatar inline' style={{ backgroundColor: color }} />\r\n        <h1 className='inline roomNameHeader'>{name}</h1>\r\n        {/* <Link to='/'> */}\r\n        {_.isEqual(props.loggedUser, user) && (\r\n          <div className='inline deleteBtn' onClick={props.deleteRoom}>\r\n            <FaTrashAlt className='deleteIcon' />\r\n          </div>\r\n        )}\r\n        {/* </Link> */}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React, { Fragment } from 'react';\r\nimport { FaCheck, FaTimes } from 'react-icons/fa';\r\nimport './AddRoom.css';\r\n\r\nconst AddRoom = props => {\r\n  const {\r\n    openInput,\r\n    cancelAddingRoom,\r\n    roomName,\r\n    addRoom,\r\n    addRoomKeyPress,\r\n    changeRoomName,\r\n    addingRoom\r\n  } = props;\r\n\r\n  const addBtn = (\r\n    <div onClick={openInput} className='addBtn'>\r\n      +\r\n    </div>\r\n  );\r\n\r\n  const addInput = (\r\n    <div className='addFormInput'>\r\n      <input\r\n        placeholder='Add a room...'\r\n        className='addInput'\r\n        onChange={changeRoomName}\r\n        onKeyPress={addRoomKeyPress}\r\n        value={roomName}\r\n        type='text'\r\n        autoFocus\r\n      />\r\n      <div className='addButtons'>\r\n        <div className='btnOk inline' onClick={addRoom}>\r\n          <FaCheck />\r\n        </div>\r\n        <div className='btnCancel inline' onClick={cancelAddingRoom}>\r\n          <FaTimes />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const result = addingRoom ? addInput : addBtn;\r\n\r\n  return <Fragment>{result}</Fragment>;\r\n};\r\n\r\nexport default AddRoom;\r\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Room from '../Room/Room';\nimport AddRoom from '../AddRoom/AddRoom';\nimport './Main.css';\n\nlet host = window.location.hostname;\nlet protocol = window.location.protocol;\nlet baseUrl = null;\nif (host === 'localhost') {\n  baseUrl = protocol + '//' + host + ':8000';\n} else {\n  baseUrl = protocol + '//' + host;\n}\n\nclass Main extends Component {\n  state = {\n    loggedUser: {},\n    roomName: '',\n    addingRoom: false,\n    rooms: []\n  };\n\n  componentDidMount() {\n    const jwt = localStorage.getItem('jwtToken');\n    console.log(jwt);\n    if (!jwt) {\n      this.props.history.push('/login');\n    } else {\n      this.getUser(jwt);\n      this.getRooms();\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  getUser = jwt => {\n    axios\n      .get(`${baseUrl}/getuser`, {\n        headers: { Authorization: `Bearer ${jwt}` }\n      })\n      .then(res => {\n        if (res.data.expired) {\n          this.props.history.push('/login');\n        } else {\n          this.setState({ loggedUser: res.data });\n        }\n      })\n      .catch(err => this.props.history.push('/login'));\n  };\n\n  getRooms = () => {\n    axios.get(baseUrl).then(res => {\n      this.setState({ rooms: res.data.rooms });\n    });\n  };\n\n  addRoom = () => {\n    const randomColor =\n      'hsl(' +\n      360 * Math.random() +\n      ',' +\n      (25 + 70 * Math.random()) +\n      '%,' +\n      (45 + 10 * Math.random()) +\n      '%)';\n    const room = {\n      name: this.state.roomName,\n      user: this.state.loggedUser,\n      color: randomColor,\n      messages: []\n    };\n    axios.post(`${baseUrl}/add`, room).then(res => {\n      this.setState({\n        rooms: [...this.state.rooms, res.data.room],\n        addingRoom: false,\n        roomName: ''\n      });\n    });\n  };\n\n  addRoomKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.addRoom();\n    }\n  };\n\n  cancelAddingRoom = () => {\n    this.setState({ addingRoom: false, roomName: '' });\n  };\n\n  openInput = () => {\n    this.setState({ addingRoom: true });\n  };\n\n  onChangeRoomName = e => {\n    this.setState({ roomName: e.target.value });\n  };\n\n  deleteRoom = (id, e) => {\n    e.preventDefault();\n    axios.delete(`${baseUrl}/${id}`).then(res => {\n      console.log(res);\n      this.props.history.push('/');\n    });\n    const rooms = this.state.rooms.filter(room => {\n      return id !== room._id;\n    });\n    this.setState({ rooms });\n  };\n\n  render() {\n    const rooms = this.state.rooms.map((room, i) => {\n      return (\n        <Room\n          room={room}\n          deleteRoom={e => this.deleteRoom(room._id, e)}\n          key={i}\n          loggedUser={this.state.loggedUser}\n        />\n      );\n    });\n\n    return (\n      <div className='main'>\n        <Fragment>\n          <div className='header'>\n            <p className='welcome'>Welcome {this.state.loggedUser.username}</p>\n            <Link className='changeProfile' to='/login'>\n              <p>Change profile</p>\n            </Link>\n          </div>\n          <div className='rooms'>\n            {rooms}\n            <AddRoom\n              addingRoom={this.state.addingRoom}\n              changeRoomName={this.onChangeRoomName}\n              openInput={this.openInput}\n              addRoom={this.addRoom}\n              addRoomKeyPress={this.addRoomKeyPress}\n              cancelAddingRoom={this.cancelAddingRoom}\n              roomName={this.state.roomName}\n            />\n          </div>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport './Login.css';\r\n\r\nlet host = window.location.hostname;\r\nlet protocol = window.location.protocol;\r\nlet baseUrl = null;\r\nif (host === 'localhost') {\r\n  baseUrl = protocol + '//' + host + ':8000';\r\n} else {\r\n  baseUrl = protocol + '//' + host;\r\n}\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: ''\r\n  };\r\n\r\n  loginUser = () => {\r\n    const user = {\r\n      username: this.state.username\r\n    };\r\n    if (this.state.username !== '') {\r\n      axios\r\n        .post(`${baseUrl}/login`, user)\r\n        .then(res => {\r\n          const token = res.data.token;\r\n          localStorage.setItem('jwtToken', token);\r\n          this.props.history.push('/');\r\n        })\r\n        .catch(err => this.props.history.push('/login'));\r\n    }\r\n  };\r\n\r\n  loginUserKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      this.loginUser();\r\n    }\r\n  };\r\n\r\n  onChangeLoggedUser = e => {\r\n    this.setState({ username: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='login'>\r\n        <h1>Login or register</h1>\r\n        <input\r\n          className='loginInput'\r\n          type='text'\r\n          onChange={this.onChangeLoggedUser}\r\n          onKeyPress={this.loginUserKeyPress}\r\n          autoFocus\r\n        />\r\n        <div className='btnLogin' onClick={this.loginUser}>\r\n          <FaCheck />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Fragment } from 'react';\r\nimport './ChatMessages.css';\r\n\r\nconst ChatMessages = props => {\r\n  let typingInfo = null;\r\n  const { username, messages, typing } = props;\r\n  console.log(typing);\r\n  const chatMessages = messages.map((msg, i) => {\r\n    return (\r\n      <Fragment key={i}>\r\n        <div\r\n          className={`messageInfo ${msg.username === username ? 'user' : ''}\r\n      `}\r\n        >\r\n          <p>\r\n            {msg.username !== username && msg.username + ','} {msg.date}\r\n          </p>\r\n        </div>\r\n        <div\r\n          className={`chatMessage ${msg.username === username ? 'user' : ''}\r\n      `}\r\n        >\r\n          <div\r\n            className={`chatBubble ${msg.username === username ? 'user' : ''} ${\r\n              msg.message.length > 35 ? 'long' : ''\r\n            }\r\n           `}\r\n          >\r\n            <h2>{msg.message}</h2>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  if (typing) {\r\n    typingInfo = typing.map((user, i) => {\r\n      return (\r\n        <p className='typing' key={i}>\r\n          {user} is typing...\r\n        </p>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='list' className='chatMessages'>\r\n      {chatMessages}\r\n      {typingInfo ? typingInfo : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;\r\n","import React, { Component } from 'react';\r\nimport ChatMessages from '../ChatMessages/ChatMessages';\r\nimport io from 'socket.io-client';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { FaTelegramPlane } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nlet host = window.location.hostname;\r\nlet protocol = window.location.protocol;\r\nlet baseUrl = null;\r\nif (host === 'localhost') {\r\n  baseUrl = protocol + '//' + host + ':8000';\r\n} else {\r\n  baseUrl = protocol + '//' + host;\r\n}\r\nconsole.log(host, protocol, baseUrl);\r\nconst socket = io.connect(baseUrl);\r\nlet vh = window.innerHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nclass Chat extends Component {\r\n  state = {\r\n    room: {},\r\n    loggedUser: {},\r\n    users: [],\r\n    message: '',\r\n    typing: [],\r\n    messages: []\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const jwt = localStorage.getItem('jwtToken');\r\n    console.log(this.props.match.params.id);\r\n    if (!jwt) {\r\n      this.props.history.push('/login');\r\n    } else {\r\n      this.setState({ room: this.props.location.state.room }, () => {\r\n        this.getUser(jwt);\r\n        this.userIsTyping();\r\n        this.userNotTyping();\r\n        this.socketSendMessage(socket);\r\n        this.getMessages();\r\n        this.getUsersInRoom();\r\n        this.getUsersLeavingRoom();\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const leaving = {\r\n      user: this.state.loggedUser.username,\r\n      room: this.state.room\r\n    };\r\n    socket.emit('leave', leaving);\r\n    this.setState({ users: [] });\r\n  }\r\n  // Try to get all users in a room\r\n  getUsersInRoom = () => {\r\n    socket.on('join', users => {\r\n      this.setState({ users });\r\n    });\r\n  };\r\n\r\n  getUsersLeavingRoom = () => {\r\n    socket.on('leave', users => {\r\n      this.setState({ users });\r\n    });\r\n  };\r\n\r\n  userIsTyping = () => {\r\n    let typing = this.state.typing.slice();\r\n    socket.on('user typing', user => {\r\n      if (this.state.loggedUser.username !== user) {\r\n        typing.push(user);\r\n        typing = typing.filter((x, i, a) => a.indexOf(x) === i);\r\n        console.log(typing);\r\n        this.setState({ typing });\r\n        // const list = document.getElementById('list');\r\n        // list.scrollTop = list.scrollHeight;\r\n      }\r\n    });\r\n  };\r\n\r\n  userNotTyping = () => {\r\n    let typing = this.state.typing.slice();\r\n    socket.on('user not typing', user => {\r\n      typing.filter(typingUser => {\r\n        return user === typingUser;\r\n      });\r\n      this.setState({ typing });\r\n    });\r\n  };\r\n\r\n  socketSendMessage = socket => {\r\n    const typingInfo = {\r\n      username: this.state.loggedUser.username,\r\n      roomName: this.state.room.name\r\n    };\r\n    socket.on('send message', message => {\r\n      socket.emit('user not typing', typingInfo);\r\n      this.setState({\r\n        message: '',\r\n        messages: [...this.state.messages, message]\r\n      });\r\n      const list = document.getElementById('list');\r\n      list.scrollTop = list.scrollHeight;\r\n    });\r\n  };\r\n\r\n  getUser = jwt => {\r\n    // fix this\r\n    axios\r\n      .get(`${baseUrl}/getuser`, {\r\n        headers: { Authorization: `Bearer ${jwt}` }\r\n      })\r\n      .then(res => {\r\n        this.setState({ loggedUser: res.data });\r\n        const joining = {\r\n          user: this.state.loggedUser.username,\r\n          room: this.state.room\r\n        };\r\n        socket.emit('join', joining);\r\n      })\r\n      .catch(err => this.props.history.push('/login'));\r\n  };\r\n\r\n  getMessages = () => {\r\n    axios\r\n      .get(`${baseUrl}/chat/${this.props.match.params.id}`)\r\n      .then(res => {\r\n        this.setState({ messages: res.data.messages });\r\n        const list = document.getElementById('list');\r\n        list.scrollTop = list.scrollHeight;\r\n      })\r\n      .catch(err => this.props.history.push('/'));\r\n  };\r\n\r\n  handleSendMessage = event => {\r\n    const { username } = this.state.loggedUser;\r\n    const sending = {\r\n      username,\r\n      message: event.target.value,\r\n      date: new Date().toLocaleString('en-GB'),\r\n      room: this.state.room\r\n    };\r\n    if (event.key === 'Enter' && this.state.message !== '') {\r\n      socket.emit('send message', sending);\r\n      this.setState({ typing: '' });\r\n    }\r\n  };\r\n\r\n  handleClickSendMessage = () => {\r\n    const { username } = this.state.loggedUser;\r\n    const sending = {\r\n      username,\r\n      message: this.state.message,\r\n      date: new Date().toLocaleString('en-GB'),\r\n      room: this.state.room\r\n    };\r\n    if (this.state.message !== '') {\r\n      socket.emit('send message', sending);\r\n      this.setState({ typing: '' });\r\n    }\r\n  };\r\n\r\n  onChangeMessageInput = e => {\r\n    const typingInfo = {\r\n      username: this.state.loggedUser.username,\r\n      roomName: this.state.room.name\r\n    };\r\n    this.setState({ message: e.target.value }, () => {\r\n      if (this.state.message !== '') {\r\n        socket.emit('user typing', typingInfo);\r\n      } else {\r\n        socket.emit('user not typing', typingInfo);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { color, name } = this.state.room;\r\n    const users = this.state.users.map((user, i) => {\r\n      return user + ' ';\r\n    });\r\n\r\n    return (\r\n      <div className='chat'>\r\n        <div className='roomName'>\r\n          <div className='avatar inline' style={{ backgroundColor: color }} />\r\n          <h1 className='inline roomNameHeader'>{name}</h1>\r\n          <p className='connectedUsers'>{users}</p>\r\n        </div>\r\n        <ChatMessages\r\n          messages={this.state.messages}\r\n          username={this.state.loggedUser.username}\r\n          typing={this.state.typing}\r\n        />\r\n        <div className='send'>\r\n          <input\r\n            type='text'\r\n            className='inputMessage'\r\n            placeholder='Type a message'\r\n            onChange={this.onChangeMessageInput}\r\n            onKeyPress={this.handleSendMessage}\r\n            value={this.state.message}\r\n          />\r\n          {isMobile && (\r\n            <div onClick={this.handleClickSendMessage} className='sendButton'>\r\n              <FaTelegramPlane />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Main from './components/Main/Main';\nimport Login from './components/Login/Login';\nimport Chat from './components/Chat/Chat';\nimport './index.css';\n\nconst routes = (\n  <Router>\n    <div>\n      <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/login' component={Login} />\n        <Route path='/chat/:id' component={Chat} />\n        <Route render={() => <Redirect to='/login' />} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routes, document.getElementById('root'));\n"],"sourceRoot":""}